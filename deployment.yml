apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-demo-nestjs-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-demo-nestjs-server
  template:
    metadata:
      labels:
        app: api-demo-nestjs-server
    spec:
      containers:
        - name: api-demo-nestjs-server
          image: gcr.io/$GCP_PROJECT_ID/api-demo-nestjs-server:$SEMAPHORE_WORKFLOW_ID
          env:
            - name: NODE_ENV
              value: "production"

---

apiVersion: v1
kind: Service
metadata:
  name: api-demo-nestjs-service
spec:
  type: NodePort
  selector:
    app: api-demo-nestjs-server
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3001

---

# apiVersion: v1
# kind: Service
# metadata:
#   name: api-demo-nestjs-server-lb
# spec:
#   selector:
#     app: api-demo-nestjs-server
#   type: LoadBalancer
#   ports:
#     - name: http
#       protocol: TCP
#       port: 80
#       targetPort: 3001

apiVersion: v1
kind: Secret
metadata:
  name: skotnickiservices
  namespace: default
data:
  tls.crt: base64 encoded cert
  tls.key: base64 encoded key
type: kubernetes.io/tls

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: api-demo-nestjs-server-ingress
spec:
  tls:
  - secretName: skotnickiservices
  rules:
  - host: skotnickiservices.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: api-demo-nestjs-service
          servicePort: 80
